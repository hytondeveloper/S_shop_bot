import os
import sqlite3


async def data_base_models(abs_path_database, model):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –ë–î –º–æ–¥–µ–ª–µ–π –∫—Ä–æ—Å—Å–æ–≤–æ–∫.
    :param abs_path_database: str (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
    :param model: str (–ú–æ–¥–µ–ª—å –æ–±—É–≤–∏)
    :param size: float (–†–∞–∑–º–µ—Ä –ø–∞—Ä—ã –æ–±—É–≤–∏)
    :param price: float (–¶–µ–Ω–∞ –ø–∞—Ä—ã –æ–±—É–≤–∏)
    :return:
    """
    # –ü–æ–ª—É—á–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_path = os.path.join(abs_path_database, 'database_models.db')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(db_path):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü—É
        conn = sqlite3.connect(db_path)
        conn.execute('''CREATE TABLE database_models
                (model TEXT     NOT NULL,
                size TEXT,
                price TEXT);''')
        conn.close()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_path)

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –≤ –ë–î:
    cursor = conn.execute("SELECT size, price FROM database_models WHERE model=?", (model,))
    result = cursor.fetchone()

    if result is not None:
        size, price = result
        # size=—Ä–∞–∑–º–µ—Ä, price=—Ü–µ–Ω–∞
        text = f'–ú–æ–¥–µ–ª—å: {model.upper()}\n–†–∞–∑–º–µ—Ä—ã: {size}\n–¶–µ–Ω–∞: {price}'
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        conn.close()
        return text

    else:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        conn.close()
        # –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π –ø–æ –≤–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é
        text = f'–î–∞–Ω–Ω—ã–µ –æ –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
        return text


########################################################################################################################

async def get_all_models(abs_path_database):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ–∞—é—â–∞—è –∑–∞ —Å–±–æ—Ä –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –∫—Ä–æ—Å—Å–æ–≤–æ–∫ —Å –ë–î --> 'database_models.db'
    :return list: –°–ø–∏—Å–æ–∫ –≤—Å—Ö –º–æ–¥–µ–ª–µ–π –∏–∑ –ë–î
    """

    # –ü–æ–ª—É—á–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_path = os.path.join(abs_path_database, 'database_models.db')
    # –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—è –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
    conn = sqlite3.connect(db_path)
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    cursor = conn.execute("SELECT DISTINCT model FROM database_models")
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞
    models = [row[0] for row in cursor.fetchall()]
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn.close()

    return models



########################################################################################################################
async def add_models_to_db(abs_path_database, models):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –≤ –ë–î –±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ü–µ–Ω—ã.
    :param abs_path_database: str (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
    :param models: list of str (—Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –æ–±—É–≤–∏)
    :return: str (—Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)
    """

    # –ü–æ–ª—É—á–∏—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_path = os.path.join(abs_path_database, 'database_models.db')
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(db_path):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü—É
        conn = sqlite3.connect(db_path)
        conn.execute('''CREATE TABLE database_models
                (model TEXT     NOT NULL,
                size TEXT,
                price TEXT);''')
        conn.close()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_path)
    for model in models:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–µ–ª—å –≤ –ë–î
        cursor = conn.execute("SELECT model FROM database_models WHERE model=?", (model,))
        result = cursor.fetchone()
        if result is None:
            # –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ –ë–î
            conn.execute("INSERT INTO database_models (model) VALUES (?)", (model,))
            conn.commit()

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn.close()

    return ('‚úÖ –ú–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –º–æ–π —Ö–æ–∑—è–∏–Ω‚ùóÔ∏è\n‚ö†Ô∏è –ü—Ä–æ—à—É –í–∞—Å –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–æ–π <–û–±–Ω–æ–≤–∏—Ç—å '
            'üîß –ë–î> –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –¢–û–õ–¨–ö–û –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚òùüèΩ, –∞ —Ç–æ —è –º–æ–≥—É üî©–ø–æ–ª–æ–º–∞—Ç—å—Å—è‚öôÔ∏è\n–î–æ–±—Ä–æ–≥–æ –í–∞–º –∑–¥–æ—Ä–æ–≤—å–µ—Ü–∞ üí™üèΩ, —Ö–æ—Ä–æ—à–µ–≥–æ'
            ' –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ü§ôüèΩ –∏ –Ω–µ—Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂üíµ\n–í–∞—à —Å–ª—É–≥–∞ ‚û°Ô∏è ü¶æü§ñ –±–æ—Ç')


# # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
# list1 = ['new-balance-574-groen-lichtgroen-groen-0196', 'new-balance-574-donkerblauw-blauw-donkerblauw-019', 'lacoste white', 'lacoste black', 'vans', '–∫–∞–∫–∏–µ —Ç–æ –º–æ–¥–Ω—ã–µ —Ç—è–≥–∏', 'lacost standart', 'nike_air_max', 'nike_airvapormax_plus']
# database_name = 'database_models.db'
# add_models_to_database(list1, database_name)
